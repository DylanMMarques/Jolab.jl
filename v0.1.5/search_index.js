var documenterSearchIndex = {"docs":
[{"location":"Lens/#Lens","page":"Lens","title":"Lens","text":"","category":"section"},{"location":"Lens/#Theory","page":"Lens","title":"Theory","text":"","category":"section"},{"location":"Lens/","page":"Lens","title":"Lens","text":"The solution is","category":"page"},{"location":"Lens/","page":"Lens","title":"Lens","text":"","category":"page"},{"location":"Lens/#Approximations","page":"Lens","title":"Approximations","text":"","category":"section"},{"location":"Lens/","page":"Lens","title":"Lens","text":"Thin lens approximation","category":"page"},{"location":"Lens/","page":"Lens","title":"Lens","text":"","category":"page"},{"location":"Lens/#Constructor","page":"Lens","title":"Constructor","text":"","category":"section"},{"location":"Lens/","page":"Lens","title":"Lens","text":"Lens(::Type, ::Any, ::Any, ::Any)","category":"page"},{"location":"Lens/#Jolab.Lens-Tuple{Type, Any, Any, Any}","page":"Lens","title":"Jolab.Lens","text":"Lens(T, f, na, ref)\n\nInitializes a multilayer structure.\n\nT number type specifing data precision. Ex: Float32, BigFloat, ... The default is Float64;\nf - defines the lens focal length in meters. A function or interpolation object can be used to describe a focal length wavelength dependent.\nna - defines the lens numerical aperture. A function or interpolation object can be used to describe a focal length wavelength dependent.\nref - ReferenceFrame specifying the lens position and orientation. The focal planes are located at the plus and minus the focal length.\n\nExamples:\n\nlens = Lens(10E-3, 0.5, ReferenceFrame(0,0,0,0,0))\n\nf(λ) = 10E-3 * λ\nna(λ) = .1 * λ\nlens = Lens(f, na, ReferenceFrame(0,0,0,0,0))\n\n\n\n\n\n","category":"method"},{"location":"Lens/","page":"Lens","title":"Lens","text":"","category":"page"},{"location":"Lens/#Implementation","page":"Lens","title":"Implementation","text":"","category":"section"},{"location":"Lens/","page":"Lens","title":"Lens","text":"lightinteraction(::Lens, ::FieldAngularSpectrumScalar)","category":"page"},{"location":"Lens/","page":"Lens","title":"Lens","text":"Jolab.coefficient_general(::Lens, ::FieldAngularSpectrumScalar)","category":"page"},{"location":"Lens/#Jolab.coefficient_general-Tuple{Lens, FieldAngularSpectrumScalar}","page":"Lens","title":"Jolab.coefficient_general","text":"(field_back, field_forward)= coefficient_general(lens, angspe)\n\nCalculates the field after propagating through the lens assuming the incident field direction of propagation. The model propagates from a focal plane to the other focal plane. The order is based on the light direction of propagation.\n\nType: Transmission matrices is diagonal. No reflection matrix is computed (the model does not assume light reflection by the lens)\nTime: very short; scales with length(angspe.nsx_X) length(angspe.nsy_Y)\nRAM: very small; scales with length(angspe.nsx_X) length(angspe.nsy_Y)\nConvergence: sampling of angspe.nsx_X and angspe.nsy_Y\n\n\n\n\n\n","category":"method"},{"location":"Lens/","page":"Lens","title":"Lens","text":"","category":"page"},{"location":"Lens/#Applications","page":"Lens","title":"Applications","text":"","category":"section"},{"location":"Lens/","page":"Lens","title":"Lens","text":"Example of systems studied with similar models:","category":"page"},{"location":"Lens/","page":"Lens","title":"Lens","text":"Fabry-Pérot etalon\nAberations induced by a coverslip","category":"page"},{"location":"Lens/","page":"Lens","title":"Lens","text":"","category":"page"},{"location":"Lens/#Reference","page":"Lens","title":"Reference","text":"","category":"section"},{"location":"Lens/","page":"Lens","title":"Lens","text":"If you use this model, please cite: Marques, Dylan M., et al. \"Modelling fabry-pérot etalons illuminated by focussed beams.\" Optics express 28.5 (2020): 7691-7706.","category":"page"},{"location":"Lens/","page":"Lens","title":"Lens","text":"","category":"page"},{"location":"Lens/#Additional-reading:","page":"Lens","title":"Additional reading:","text":"","category":"section"},{"location":"Lens/","page":"Lens","title":"Lens","text":"Goodman, Joseph W. Introduction to Fourier optics. Roberts and Company Publishers, 2005.\nWolf, Emil. \"Electromagnetic diffraction in optical systems-I. An integral representation of the image field.\" Proceedings of the Royal Society of London. Series A. Mathematical and Physical Sciences 253.1274 (1959): 349-357.\nRichards, Bernard, and Emil Wolf. \"Electromagnetic diffraction in optical systems, II. Structure of the image field in an aplanatic system.\" Proceedings of the Royal Society of London. Series A. Mathematical and Physical Sciences 253.1274 (1959): 358-379.\nNovotny, Lukas, and Bert Hecht. Principles of nano-optics. Cambridge university press, 2012.","category":"page"},{"location":"exampleAiry/#Fabry-Pérot-etalon","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"","category":"section"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"This example shows how to model light propagation in a Fabry-Pérot  (FP) etalon in Jolab.","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"using Jolab\nusing Plots; plotly();\n","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"The optical system considered is based on the system used by D.Marques et al.. The first aim of this example is to calculate transmitted and reflected light intensity as a function of wavelength (λ) - typically known as Interferometer Transfer Function (ITF).","category":"page"},{"location":"exampleAiry/#Designing-the-optical-setup","page":"Fabry-Pérot etalon","title":"Designing the optical setup","text":"","category":"section"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"The optical system is made by a single mode fibre, two lenses (labelled collimator and objective) and an FP etalon. We start by defining the optical fibre based on its Mode Field Diameter (mfd) and the position of the tip:","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"mfd = 10E-6 # Mode field diameter in meters\nn_fibre = Jolab.refractiveindex_air(printBool = false) # refractive index outside the fibre\ndir_fibre = 1 # Direction to which the fibre tip is pointing at (1 to forward and -1 to backward)\nref_fibre = ReferenceFrame(0, 0, 0., 0, 0) # Position and orientation of the fibre tip in meters (x,y,z,θ,ϕ)\nfibre = SingleModeFibre(mfd, n_fibre, dir_fibre, ref_fibre);","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"We now define the first lens, labelled collimator, based on its focal length, numerical aperture and position:","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"f_col = 15E-3 # focal length in meters of the collimator\nna_col = 1 # Numerical aperture of the collimator\nref_col = ReferenceFrame(0, 0, f_col, 0, 0) # Position of the collimator in meters (x,y,z,θ,ϕ)\ncollimator = Lens(f_col, na_col, ref_col);","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"Similarly the second lens:","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"f_obj = 15E-3 * 8 # focal length in meters of the objective\nna_obj = 1 # Numerical aperture of the objective\nref_obj = ReferenceFrame(0, 0, 2f_col + f_obj, 0, 0) # Position of the objective in meters (x,y,z,θ,ϕ)\nobjective = Lens(f_obj, na_obj,ref_obj);","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"The last optical component to be defined is the FP etalon. The FP etalon is defined as two mirrors placed sequentially on the optical setup:","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"R₁ = 0.9925; # Reflectivity of the first mirror\nR₂ = 0.9925; # Reflectivity of the second mirror\nh = 102E-6; # Cavity thickness in meters\nn₁ = Jolab.refractiveindex_air(printBool = false); # Refractive index before the first mirror\nn₂ = Jolab.refractiveindex_fusedsilica(printBool = false); # Refractive index before the first mirror\nn₃ = Jolab.refractiveindex_air(printBool = false);# Refrative index after the second mirror\nref_m₁ = ReferenceFrame(0, 0, 2f_col + 2f_obj); # Position of the first FP mirror in meters (x,y,z)\nref_m₂ = ReferenceFrame(0, 0, 2f_col + 2f_obj + h); # Position of the second FP mirror in meters (x,y,z).\nmirror1 = Mirror(R₁, n₁, n₂, ref_m₁); # Creates the first mirror. Specifies the refractive index before and after the mirror and the position\nmirror2 = Mirror(R₂, n₂, n₃, ref_m₂); # Creates the second mirror. Specifies the refractive index before and after the mirror and the position\nfp = [mirror1, mirror2]; # Defines the FP etalon","category":"page"},{"location":"exampleAiry/#Definition-of-the-simulation-parameters","page":"Fabry-Pérot etalon","title":"Definition of the simulation parameters","text":"","category":"section"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"The aim of the simulation is to propagate the light emerging for the fibre by the optical system. The reflected light propagates back by the optical setup and goes back inside the fibre that leads to a detector. To calculate the ITF we need to evaluate the intensity as a function of the wavelength:","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"λ = range(1554E-9, 1554.75E-9, length = 100) # range of wavelength in meters\nitf_r = zeros(length(λ)); # preallocation of the array to store the result\nitf_t = zeros(length(λ)); # preallocation of the array to store the result\nsx = range(-.2, .2, length = 100); # Directions of the plane waves considered. It is related with the angles by sx = sinθcosϕ. Affect the model convergence\nsy = range(-.2, .2, length = 100); # Directions of the plane waves considered. It is related with the angles by sy = sinθsinϕ. Affect the model convergence\n","category":"page"},{"location":"exampleAiry/#Propagating-the-field-by-the-optical-system","page":"Fabry-Pérot etalon","title":"Propagating the field by the optical system","text":"","category":"section"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"The optical system and the simulation parameters were defined on the previous section. The code bellow propagates the light by the optical setup and calculates the intensity detected on the detector.","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"for i in eachindex(λ)\n    field = Jolab.FieldAngularSpectrumScalar_fromfibre(fibre, sx, sy, λ[i]); # Field in the tip of the fibre\n\n    (tmp, field) = lightinteraction(collimator, field) # Field in the back focal plane of the collimator/objective\n    (tmp, field) = lightinteraction(objective, field) # Field in the focal plane of the objective\n    (fieldr, fieldt) = lightinteraction(fp, field) # Reflected field by the Fabry Perot etalon\n    itf_t[i] = intensity(fieldt)\n    (fieldr, tmp) = lightinteraction(objective, fieldr) # Reflected field in the back focal plane of the collimator/objective\n    (fieldr, tmp) = lightinteraction(collimator, fieldr) # Reflected field in the focal plane of the collimator, i.e., the tip of the fibre\n\n    itf_r[i] = signal(fibre, fieldr); # Calculate the signal measured using a fibre based detection system\nend\nplot(λ, itf_t)\nplot!(λ, itf_r)","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"(Image: ITF)","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"This example is concluded with the calculation of the ITF. A good application of this model is to better understand the physics behind the interrogation of FP etalons with focused beam. As visible in the plot, the ITF is asymmetric (regarding the wavelength axis) its peak transmissivity is lower than one. Both features do not occur if the a collimated beam is incident upon an FP etalon as visible in this work.","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"Jolab will be used to explain the reason for the reduction on the peak transmissivity and the ITF asymmetry. To explain the asymmetry, the angular spectrum of the transmitted beam will be plotted as the wavelength varies within an ITF.","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"for i in eachindex(λ)\n    field = Jolab.FieldAngularSpectrumScalar_fromfibre(fibre, sx, sy, λ[i]); # Field in the tip of the fibre\n\n    (tmp, field) = lightinteraction(collimator, field) # Field in the back focal plane of the collimator/objective\n    (tmp, field) = lightinteraction(objective, field) # Field in the focal plane of the objective\n    (fieldr, fieldt) = lightinteraction(fp, field) # Reflected field by the Fabry Pérot etalon\n\n    plot(fieldt) # Display the transmitted angular spectrum\nend","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"(Image: angular path length dispersion) (The data shown in this figure is not for the same conditions as in this script)","category":"page"},{"location":"exampleAiry/","page":"Fabry-Pérot etalon","title":"Fabry-Pérot etalon","text":"As visible in the animation, an FP etalon acts simultaneously as both wavelength and angular filter which creates the ITF asymmetry and reduction in the peak transmissivity. The same conclusion where made by D.Marques et al. and Prof. Shaoul Ezekiel","category":"page"},{"location":"exampleMultimodeFibre/#Multimode-Fibre","page":"Multimode Fibre","title":"Multimode Fibre","text":"","category":"section"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"This example shows the usage of the toolbox to calculate light propagation in a cilindre. The normal profile of the refractive index is defined by the refractive index of the cilindre and the refractive index of the surronding media. The toolbox allows to simulate light propagation inside the cilindre assuming the beam incident upon its face. This example will show how to use the toolbox to simulate light propagation by a Multi Mode Fibre. As a aim, we will consider an field incident upon one tip of the fibre an propagate it to the other side of the fibre. We start by loading the toolbox and a plotting package.","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"using Jolab\nusing Plots; plotly()","category":"page"},{"location":"exampleMultimodeFibre/#Defining-the-optical-setup","page":"Multimode Fibre","title":"Defining the optical setup","text":"","category":"section"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"We need now to define the fibre itself based on the refractive index of the core as the fibre Numerical Aperture.","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"r_fib = 50E-6; # radius of the fibre core in meters\nna_fib = .1; # numerical aperture of the fibre\nref_fib = ReferenceFrame(0,0,0,0,0); # position and orientaion of the fibre tip\nlength_fib= 1; # length of the fibre. The referenceframe second fibre tip is on the other side of the cilindre. I.e., in this case the referenceframe of the second tip is ReferenceFrame(0,0,length_fib,0,0);\nnambient = Jolab.refractiveindex_air(printBool = false); # refractive index before the fibre\nncore_fib = Jolab.refractiveindex_fusedsilica(printBool = false); # refractive index of the fibre core\nfibre = CircularStepIndexFibre(r_fib, na_fib, ncore_fib, nambient, ref_fib, nambient, length_fib); # Initialization of the fibre","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"In the previous lines we create the multi mode fibre.","category":"page"},{"location":"exampleMultimodeFibre/#Modes-calculation","page":"Multimode Fibre","title":"Modes calculation","text":"","category":"section"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"Light inside the fibre propagate as modes, i.e. the beam can be decomposed as a sum of modes which replicate in space along the fibre. The modes can be calculated, for a given wavelength, using the function findmodes! which will solve numerically the wave equation for the given fibre and wavelength.","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"λ = 1550E-9; # Defines the wavelength for the simulation\nJolab.findmodes!(fibre, λ); # Calculates the possible modes inside the fibre\nmodes = fibre.modes[1]; # We choose the modes for the wavelength considered. If we calculate the modes for more than 1 wavelength they would be saved on fibre.modes[i].\nplot(modes[50], type = :real, fill = true, c = :bluesreds) # plot the mode\n","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"We can plot the shape of the modes using the function plot as above. The number of modes found for a given fibre/wavelength can be calculated using the function numberofmodes(modes). The toolbox saves the modes inside the variable fibre and therefore they need to be calculated only once for a given fibre and wavelength. The modes are automatically calculated (if not precalculated) when using the function lightinteraction(fibre, field) and therefore it is not needed to call the function findmodes!.","category":"page"},{"location":"exampleMultimodeFibre/#Coupling-light-inside-the-fibre","page":"Multimode Fibre","title":"Coupling light inside the fibre","text":"","category":"section"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"To calculate the light coupling inside the fibre we first need to define the field insident upon the fibre. In this case, we will consider a Gaussian beam at the tip of the fibre but not centered","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"x = range(-50E-6, 50E-6, length = 100); # x spatial coordinates where the field and modes are evaluated in meters. Make sure that the sampling of the field and modes is good enough within the region of interest, i.e. where the field is incident\ny = range(-50E-6, 50E-6, length = 100); # y spatial coordinates where the field and modes are evaluated in meters. Make sure that the sampling of the field and modes is good enough within the region of interest, i.e. where the field is incident\nσ = 50E-6; # Beam waist of the Gaussian beam defined by 1/e^2 of the Gaussian intensity profile\nref_field = ReferenceFrame(50E-6,0,0,0,0); # ReferenceFrame of the field with the position x,y,z in meters. The beams is offset by 50 μm to the center of the fibre\nfield = FieldSpaceScalar_gaussian(x, y, σ, λ, nambient(λ), 1, ref_field); # Initialization of the field\nplot(field, fill=true, c = :amp, type = :abs) # plot the incident field upon the fibre","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"We have defined all the necessary parameters to perform the simulation. The next line of code calculates the light coupling inside the fibre.","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"(tmp, fieldmodes) = lightinteraction(fibre, field);","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"fieldmodes is a struct FieldModes which describes a field based into the modes of the multi mode fibre. This allows to propagate the light inside the fibre until the second tip. In order to calculate the field that goes out of the fibre (in the order side) we need to use the function lightinteraction again with the spatial coordinates where the field will be evaluated. The field propagation is performed automatically.","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"plot(fieldmodes, c = :amp, fill = true, type = :abs) # Plot hte field outside the fibre","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"We can be see that fieldtip2 is defined on the other side of the tip (look at the referenceframe fieldtip2.ref).","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"intensity(fieldmodes) / intensity(field) # Difference between the intensity of the light incident and the light transmitted.","category":"page"},{"location":"exampleMultimodeFibre/","page":"Multimode Fibre","title":"Multimode Fibre","text":"We can also calculate the part of the light that is coupled inside the fibre by making the ratio between the transmitted and incident beam intensity.","category":"page"},{"location":"exampleComponent/#Sequential-modelling","page":"Sequential modelling","title":"Sequential modelling","text":"","category":"section"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"This is an example of using Jolab to simulate the light propagation on optical system. Jolab has models implemented to simulate various optical components but to simulate optical system the user must apply propagate the light by the multiple optical components, i.e. sequential modelling. We start by modelling a simple optical system: two lenses placed sequentially on the 4f configuration.","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"The first step is to load the Jolab into Julia","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"using Jolab\nusing Plots; plotly()","category":"page"},{"location":"exampleComponent/#Defining-the-optical-setup","page":"Sequential modelling","title":"Defining the optical setup","text":"","category":"section"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"We will now create the first lens which focus the collimated beam. A lens is defined based on its focal length (f), its numerical aperture (na) and its referenceframe, i.e. the position in space where the lens is placed.","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"f1 = 30E-3 # focal length in meters of the lens\nna1 = 1 # Numerical aperture of the lens\nref1 = ReferenceFrame(0, 0, f1) # Position in meters of the lens in meters (x,y,z)\nlens1 = Lens(f1, na1, ref1); # Creation of the lens","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"The next step is to create the second lens which will re-collimate the beam. As before, we define its focal length, na and referenceframe. We place the lens such that the focal plane of both lenses is the same.","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"f2 = 60E-3 # focal length in meters of the lens\nna2 = 1 # Numerical aperture of the lens\nref2 = ReferenceFrame(0, 0, 2f1 + f2) # Position in meters of the lens\nlens2 = Lens(f2, na2, ref2); # Creation of the lens","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"We also need to specify the collimated beam incident upon the lens. In this example, we will consider a Gaussian beam in the back focal plane of the lens. A Gaussian beam is defined based on the beam waist (σ), wavelength (λ) and referenceframe:","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"λ = 1550E-9 # wavelength in meters\nσ = 1000E-6 # Gaussian beam waist in meters. Defined based on where the intensity decreases to 1/e²\nx = σ .* range(-1.5, 1.5, length = 128); # Position x in meters where the field is evaluated\ny = σ .* range(-1.5, 1.5, length = 128); # Position y in meters where the field is evaluated\nn = Jolab.refractiveindex_air(printBool= false); # Refractive index of the medium\ndir = 1; # Direction of propagation of the field (forward 1 or backward -1)\nref = ReferenceFrame(0 , 0, 0); # Position in mirrors of the field (x,y,z)\nfieldBackFocalPlane = FieldSpaceScalar_gaussian(x, y, σ, λ, n(λ), dir, ref); # Creation of the field\nplot(fieldBackFocalPlane) # Display the field intensity","category":"page"},{"location":"exampleComponent/#Propagating-the-field-by-the-optical-setup","page":"Sequential modelling","title":"Propagating the field by the optical setup","text":"","category":"section"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"At this point, all the optical components and initial fields of the simulations are created. The next step is to propagate the field by the optical components. This is done with the function (backward_field, forward_field) = lightinteraction(Optical_component, incident_field) where backward_field is the field propagating backward after the interaction with the optical component and forward_field is the field propagating forward. For the case the an optical component does not reflect light, for example as an ideal lens, one of the field will be nothing.","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"Following the script example, the simulation of the first lens is made as:","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"(tmp, angspeFocalPlane) = lightinteraction(lens1, fieldBackFocalPlane); # Calculates the field in the focal plane of the lens","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"We have calculated the field in the focal plane of both lenses. We can now propagate the field by the second lens. We need to repeat the same approach as before:","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"(tmp, fieldBackFocalPlane_2) = lightinteraction(lens2, angspeFocalPlane);\nplot(fieldBackFocalPlane_2)","category":"page"},{"location":"exampleComponent/","page":"Sequential modelling","title":"Sequential modelling","text":"We have finally calculated how light propagates by two lenses. We can see that the beam is magnified as it propagates by the two lens due to the different focal length. This example shows the basic concept of the toolbox - the modularity. This toolbox is built to allow its users to calculate how light interacts with single optical components and, by putting code together, how light propagates on optical setups. This simple example only simulates lens but any lens could be replace by any other optical component such as, fibre, mirror, interferometers, etc...","category":"page"},{"location":"exampleAngularSpectrum/#Angular-Spectrum","page":"Angular Spectrum","title":"Angular Spectrum","text":"","category":"section"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"This is an example from Jolab to familiarise an user with the concept of angular spectrum.","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"The first step is to load the Jolab and a plotting package","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"using Jolab\nusing Plots; plotly()","category":"page"},{"location":"exampleAngularSpectrum/#Defining-a-light-field-in-space","page":"Angular Spectrum","title":"Defining a light field in space","text":"","category":"section"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"We start by defining a focused Gaussian beam in space.","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"λ = 1550E-9 # wavelength in meters\nσ = 5E-6 # Gaussian beam waist in meters. Defined based on where the intensity decreases to 1/e²\nx = σ .* collect(range(-1.5, 1.5, length = 128)); # Position x in meters where the field is evaluated\ny = σ .* collect(range(-1.5, 1.5, length = 128)); # Position y in meters where the field is evaluated\nn = Jolab.refractiveindex_air(printBool= false); # Refractive index of the medium\ndir = 1; # Direction of propagation of the field (forward 1 or backward -1)\nref = ReferenceFrame(0 , 0, 0); # Position in mirrors of the field (x,y,z)\nfieldspace = FieldSpaceScalar_gaussian(x, y, σ, λ, n(λ), dir, ref); # Creation of the field\nplot(fieldspace, fill = true, c = :amp) # Display the field intensity","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"The field calculated on the section above is defined based on the field distribution in space, i.e. we know the amplitude and phase of the field in the positions (x,y). If we would put a camera in front of the field, the data acquired would be the graph plotted above.","category":"page"},{"location":"exampleAngularSpectrum/#Transforming-to-an-Angular-Spectrum","page":"Angular Spectrum","title":"Transforming to an Angular Spectrum","text":"","category":"section"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"An optical field can be interpreted in different ways. For example, instead of assuming our field as a distribution in space we can assume the field as a distribution of plane waves with different directions of propagation, i.e. the field is composed as a distribution of plane waves with complex amplitude E(n sx, n sy) propagating with direction (nsx,nsy). nsx and nsy are the spatial frequencies and related with the angle of propagation (θ,ϕ) by (n sin(θ) cos(ϕ), n sin(θ)sin(ϕ)) where n is the medium refractive index. This way of interpreting the field is commonly called angular spectrum.","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"The angular spectrum of a field is calculated by 2D Fourrier Transform the field distribution in space. Jolab has already a function to calculate the angular spectrum based on a field distribution in space.","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"nsx = range(-.5, .5, length = 128); #x spatial frequencies where the field is evaluated\nnsy = range(-.5, .5, length = 128); #y spatial frequencies where the field is evaluated\nfourier = FourierTransform(x, y, nsx, nsy) \n(tmp, angspe) = lightinteraction(fourier, fieldspace); # calculate the angular spectrum from the field distribution in space\nplot(angspe, fill = true, c = :amp)","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"The color scale of the graph above represent the amplitude of the plane wave and the x,y axis the nsx and nsy spatial frequencies, i.e. the direction of the respective plane wave. This can be illustrator by changing the distribution of the plane wave amplitude so that the field just has one angular component.","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"angspeTest = deepcopy(angspe) # create a copy of the angspe\nangspeTest.e_SXY .= 0.; # Set all plane waves amplitude to 0\nangspeTest.e_SXY[LinearIndices((128,128))[64,64]] = 1; # Choose a plane a set amplitude 1. For the index [64,64] the plane wave is propagating parallel to the z axis\n(tmp, fieldspaceTest) = lightinteraction(fourier, angspeTest) # Calculates the field in space\nplot(fieldspaceTest, type = :real, fill = true, c = :bluesreds) # Plot the real part of the field.\n# The field does not look like a prefect plane wave due to the non-traditional fourier transform implementation in Jolab. This non-traditional implementation improves the accuracy of the numerical evaluation of the fourier transform.","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"The code above shows that if we only have a single component defined on the angular spectrum the respective field in space corresponds to a plane wave. We recommend the user to play with the code and changing the index which will change the direction of the plane wave.","category":"page"},{"location":"exampleAngularSpectrum/#Transforming-back-to-the-field-in-space","page":"Angular Spectrum","title":"Transforming back to the field in space","text":"","category":"section"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"From an angular spectrum we can calculate the field in space using the respective inverse transformation.","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"(tmp, fieldspace2) = lightinteraction(fourier, angspe);\nplot(fieldspace2, fill = true, c = :amp)","category":"page"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"The code above transformed the field back to its distribution in space and ,as we can see, fieldspace2 is identical to fieldspace which was initially calculated. It is important to understand that defining a field in space or as a angular spectrum is irrelevant as the information about the field is the same but just in another format. The user can always switch between the spatial field and the angular spectrum using the respective function (angspetofield and fieldtoangspe). The only errors induced are due to evaluating the 2D fourrier transform numerically.","category":"page"},{"location":"exampleAngularSpectrum/#The-application-of-the-Angular-Spectrum","page":"Angular Spectrum","title":"The application of the Angular Spectrum","text":"","category":"section"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"The angular spectrum allows to calculate how a plane wave interacts with many optical components including multilayer structure, spheres and others. Another example, and the most basic, is to propagate an arbitrary field in free space. It is time consuming to calculate how a focused beam propagates in free space based on its distribution in space. However, it is very well known how a plane wave propagates in space and therefore, by considering the propagation of all plane waves, how an angular spectrum propagates.","category":"page"},{"location":"exampleAngularSpectrum/#Using-both-formalism","page":"Angular Spectrum","title":"Using both formalism","text":"","category":"section"},{"location":"exampleAngularSpectrum/","page":"Angular Spectrum","title":"Angular Spectrum","text":"Jolab was developed to use both formalism as it increases the versability. For some optical components, such multilayer structures, spheres, how light interacts with them is know for an incident plane wave and therefore the angular spectrum is used. On other scenarios, such as cameras and detectors, the toolbox requires the field in space to calculate the signal measured.","category":"page"},{"location":"MultilayerStructure/#Multilayer-Structure","page":"Multilayer Structure","title":"Multilayer Structure","text":"","category":"section"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"A Multilayer structure or stratified media is a stack of parallel films.","category":"page"},{"location":"MultilayerStructure/#Theory","page":"Multilayer Structure","title":"Theory","text":"","category":"section"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"The solution is based on calculating the reflected and transmitted plane waves at each interface and the phase change due to light propagation inside each layer. The solution is a geometric sum which considers all the internal round trips generated inside the multilayer structure as illustrated in the figure above.","category":"page"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"","category":"page"},{"location":"MultilayerStructure/#Approximations","page":"Multilayer Structure","title":"Approximations","text":"","category":"section"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"None. The implementation solves Maxwell equations for any type of multilayer structure and any incident beam.","category":"page"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"","category":"page"},{"location":"MultilayerStructure/#Constructor","page":"Multilayer Structure","title":"Constructor","text":"","category":"section"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"MultilayerStructure(::Type, ::Any, ::Any, ::Any)","category":"page"},{"location":"MultilayerStructure/#Jolab.MultilayerStructure-Tuple{Type, Any, Any, Any}","page":"Multilayer Structure","title":"Jolab.MultilayerStructure","text":"MultilayerStructure(T, n, h, ref)\n\nInitializes a multilayer structure.\n\nT number type specifing data precision. Ex: Float32, BigFloat, ... The default is Float64;\nn - vector specifying the refractive index of each layer. A function or interpolation object can be used to describe a refractive index wavelength dependent.\nh - vector specifying the thickness of each layer. The layer with refractive index n[i] has a thickness of h[i-1] meters;\nref - ReferenceFrame specifying the multilayer position and orientation. The first interface of the multilayer structure is intersect the reference frame.\n\nExamples:\n\nmls = MultilayerStructure([1, 2, 3], [100E-9], ReferenceFrame(0,0,0.,0,0))\n\nn_1(λ) = √(complex(8.393 + .14383 / ((λ*1E6)^2 - 0.2421^2) + 4430.99 / ((λ*1E6)^2 - 36.71^2)))\nmls = MultilayerStructure([1, n_1], [], ReferenceFrame(0,0,0.,0,0))\n\n\n\n\n\n","category":"method"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"","category":"page"},{"location":"MultilayerStructure/#Implementation","page":"Multilayer Structure","title":"Implementation","text":"","category":"section"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"lightinteraction(::MultilayerStructure, ::FieldAngularSpectrumScalar)","category":"page"},{"location":"MultilayerStructure/#Jolab.lightinteraction-Tuple{MultilayerStructure, FieldAngularSpectrumScalar}","page":"Multilayer Structure","title":"Jolab.lightinteraction","text":"lightinteraction(::MultilayerStructure, ::FieldAngularSpectrumScalar)\n\nCalculates the reflected and transmitted fields from a multilayer structure for an incident angular spectrum\n\nTime: very short; scales with Nx Ny\nRAM: None\nConvergence sampling of nsx and nsy\n\n\n\n\n\n","category":"method"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"Jolab.coefficient_general(::MultilayerStructure, ::FieldAngularSpectrumScalar)","category":"page"},{"location":"MultilayerStructure/#Jolab.coefficient_general-Tuple{MultilayerStructure, FieldAngularSpectrumScalar}","page":"Multilayer Structure","title":"Jolab.coefficient_general","text":" coefficient_general(::MultilayerStructure, ::FieldAngularSpectrumScalar)\n\nCalculates the scattering matrix of a multilayer structure for an incident angular spectrum\n\nType: Transmission and reflection matrices are diagonal\nTime: very short; scales with Nx Ny\nRAM: very small; scales with Nx Ny\nConvergence sampling of nsx and nsy\n\n\n\n\n\n","category":"method"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"","category":"page"},{"location":"MultilayerStructure/#Applications","page":"Multilayer Structure","title":"Applications","text":"","category":"section"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"Example of systems studied with similar models:","category":"page"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"Fabry-Pérot etalon\nAberations induced by a coverslip","category":"page"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"","category":"page"},{"location":"MultilayerStructure/#Reference","page":"Multilayer Structure","title":"Reference","text":"","category":"section"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"If you use this model, please cite: Marques, Dylan M., et al. \"Modelling fabry-pérot etalons illuminated by focussed beams.\" Optics express 28.5 (2020): 7691-7706.","category":"page"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"","category":"page"},{"location":"MultilayerStructure/#Additional-reading:","page":"Multilayer Structure","title":"Additional reading:","text":"","category":"section"},{"location":"MultilayerStructure/","page":"Multilayer Structure","title":"Multilayer Structure","text":"Chapter 2 of Fujiwara, Hiroyuki. Spectroscopic ellipsometry: principles and applications. John Wiley & Sons, 2007.\nVan de Nes, A. S., et al. \"Calculation of the vectorial field distribution in a stratified focal region of a high numerical aperture imaging system.\" Optics Express 12.7 (2004): 1281-1293.","category":"page"},{"location":"#Jolab","page":"Home","title":"Jolab","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: Build Status) (Image: Codecov)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Jolab is a free, open-source Julia package to simulate light propagation in optical setups. The package implements rigorous, full-wave optical theories to simulate light propagation on setups. The package is built to be easily usable by any user independent of its background in theoretical optics.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package was designed to allow an user to simulate optical setups based on individual optical components, i.e., the package provides functions that calculate how light propagates on an optical component and the user must propagate the light by the many optical components. The simulation of an optical setup is made by simulating how light propagates in each individual optical component. A few examples are provided in the folder example to show the principle of the toolbox.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package is currently at a very early stage in its development. Due to that, it is very likely the code to have bugs and inconsistencies. Therefore, we advise any user to be careful in its utilization. In the near future, we will focus the development in creating a stable version of the package with scientific rigor.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the future, we want to develop the package to allow users to simulate a variety of optical setups as microscopes, Optical Coherence Tomography setups (OCT), interferometers, ellipsometers, etc. We want the package to be a tool to help scientists and engineers to design and understand their optical setups.","category":"page"},{"location":"#Instalation","page":"Home","title":"Instalation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install Jolab, a user need to run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add Jolab","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package is developed at the Department of Medical Physics and Biomedical Engineering of UCL (University College London) by Dylan M. Marques, James A. Guggenheim, and Peter R. T. Munro.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Please feel free to get in touch to report bugs, comments and feedback (dylan.marques.17@ucl.ac.uk)","category":"page"}]
}
